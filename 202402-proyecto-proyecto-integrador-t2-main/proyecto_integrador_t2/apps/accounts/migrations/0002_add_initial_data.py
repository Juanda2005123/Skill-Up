# Generated by Django 5.1.1 on 2024-11-14 15:14

from django.db import migrations

def load_initial_data(apps, schema_editor):
    Country = apps.get_model('accounts', 'Country')
    City = apps.get_model('accounts', 'City')

    # Diccionario con el código de país como clave y el nombre del país y sus ciudades como valores
    countries_with_cities = {
        'AR': {'name': 'Argentina', 'cities': ['Buenos Aires', 'Córdoba', 'Rosario', 'Mendoza']},
        'BR': {'name': 'Brazil', 'cities': ['São Paulo', 'Rio de Janeiro', 'Brasilia', 'Salvador']},
        'CL': {'name': 'Chile', 'cities': ['Santiago', 'Valparaíso', 'Concepción', 'La Serena']},
        'CO': {'name': 'Colombia', 'cities': ['Bogotá', 'Medellín', 'Cali', 'Cartagena']},
        'PE': {'name': 'Peru', 'cities': ['Lima', 'Cusco', 'Arequipa', 'Trujillo']},
        'MX': {'name': 'Mexico', 'cities': ['Ciudad de México', 'Guadalajara', 'Monterrey', 'Puebla']},
        'US': {'name': 'United States', 'cities': ['New York', 'Los Angeles', 'Chicago', 'Houston']},
        'CA': {'name': 'Canada', 'cities': ['Toronto', 'Vancouver', 'Montreal', 'Calgary']},
        'ES': {'name': 'Spain', 'cities': ['Madrid', 'Barcelona', 'Valencia', 'Sevilla']},
        'FR': {'name': 'France', 'cities': ['Paris', 'Lyon', 'Marseille', 'Toulouse']},
        'DE': {'name': 'Germany', 'cities': ['Berlin', 'Hamburg', 'Munich', 'Frankfurt']},
        'IT': {'name': 'Italy', 'cities': ['Rome', 'Milan', 'Naples', 'Turin']},
        'UK': {'name': 'United Kingdom', 'cities': ['London', 'Manchester', 'Birmingham', 'Liverpool']},
        'CN': {'name': 'China', 'cities': ['Beijing', 'Shanghai', 'Shenzhen', 'Guangzhou']},
        'JP': {'name': 'Japan', 'cities': ['Tokyo', 'Osaka', 'Kyoto', 'Yokohama']},
        'IN': {'name': 'India', 'cities': ['Mumbai', 'Delhi', 'Bangalore', 'Chennai']},
        'KR': {'name': 'South Korea', 'cities': ['Seoul', 'Busan', 'Incheon', 'Daegu']},
        'SG': {'name': 'Singapore', 'cities': ['Singapore']},
        'ID': {'name': 'Indonesia', 'cities': ['Jakarta', 'Surabaya', 'Bandung', 'Medan']},
        'TH': {'name': 'Thailand', 'cities': ['Bangkok', 'Chiang Mai', 'Pattaya', 'Phuket']}
    }

    # Iterar sobre el diccionario para crear países y ciudades
    for country_code, country_data in countries_with_cities.items():
        # Crear el país con el código y el nombre
        country, created = Country.objects.get_or_create(
            code=country_code, 
            defaults={'name': country_data['name']}
        )
        
        # Crear las ciudades asociadas a ese país
        for city_name in country_data['cities']:
            City.objects.create(name=city_name, country=country)

class Migration(migrations.Migration):

    
    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_initial_data),
    ]
